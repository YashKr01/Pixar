plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "androidx.navigation.safeargs.kotlin"
    id 'kotlin-parcelize'
}

android {
    namespace 'com.techk.pixar'
    compileSdk rootProject.ext.compile_sdk_version

    defaultConfig {
        applicationId rootProject.ext.application_id
        minSdk rootProject.ext.min_sdk_version
        targetSdk rootProject.ext.target_sdk_version
        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        buildConfigField("String", "API_KEY", "\"" + localProperties['API_KEY'] + "\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    implementation("com.github.bumptech.glide:glide:$glide_version") { because("glide for network images") }

    implementation("com.squareup.retrofit2:retrofit:$retrofit_version") { because("networking") }
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version") { because("JSON serialisation") }

    implementation("androidx.room:room-runtime:$room_version") { because("saving data locally") }
    annotationProcessor("androidx.room:room-compiler:$room_version")

    implementation("androidx.navigation:navigation-fragment:$navigation_version") { because("fragments navigation") }
    implementation("androidx.navigation:navigation-ui:$navigation_version")

    implementation("androidx.datastore:datastore-preferences:$datastore_version") { because("storing key value pairs") }

    implementation("androidx.core:core-splashscreen:$splash_version") { because("splash screen") }

    implementation("com.facebook.shimmer:shimmer:$shimmer_version") { because("shimmer effect") }

    debugImplementation("com.squareup.leakcanary:leakcanary-android:$canary_version") { because("catching memory leaks") }

    debugImplementation("com.github.chuckerteam.chucker:library:$chucker_version") { because("tracking network calls") }
    releaseImplementation("com.github.chuckerteam.chucker:library-no-op:$chucker_version")

    implementation("com.airbnb.android:lottie:$lottie_version") { because("lottie animations") }

}